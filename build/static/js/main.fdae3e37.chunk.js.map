{"version":3,"sources":["components/Filter.js","components/PersonsForm.js","components/Persons.js","services/phonebook.js","components/Notification.js","components/ErrorMessage.js","App.js","index.js"],"names":["Filter","name","handler","value","onChange","PersonForm","props","onSubmit","addContact","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","arr","filteredName","deleteContact","filter","x","includes","map","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","ErrorMessage","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","errorMessage","setErrorMessage","filteredContacts","useEffect","phoneService","initialPhoneAddress","event","target","preventDefault","length","window","confirm","person","find","n","changedPerson","returnedContact","old","catch","error","setTimeout","alert","returnedAddress","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdae3e37.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({name, handler}) => {\r\n    return (\r\n      <form>\r\n        <div>\r\n          filter shown with\r\n            <input value={name} onChange={handler}/>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.addContact}>\r\n        <div>\r\n          name: <input\r\n                  value={props.newName}\r\n                  onChange={props.handleNameChange}\r\n                />\r\n        </div>\r\n        <div>\r\n          number: <input\r\n                  value={props.newNumber}\r\n                  onChange={props.handleNumberChange}\r\n                />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({arr, filteredName, deleteContact}) => {\r\n    return(\r\n      <div>\r\n        {\r\n        arr.filter(x => x.name.includes(filteredName))\r\n           .map(x =>\r\n          <p> \r\n            {x.name}: {x.number}\r\n            <button onClick={() => deleteContact(x.id)}>delete</button>\r\n          </p>\r\n        )}\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteContact = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deleteContact }\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"message\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default ErrorMessage","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonsForm'\r\nimport Persons from './components/Persons'\r\nimport phoneService from './services/phonebook'\r\nimport Notification from './components/Notification'\r\nimport ErrorMessage from './components/ErrorMessage'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ filteredName, setFilter] = useState('')\r\n\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  let filteredContacts = persons\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n\r\n  }\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  const handleFilter = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const addContact = (event) => {\r\n    event.preventDefault()\r\n    if (persons.filter(x => newName === x.name).length > 0){\r\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n      if (result){\r\n        const person = persons.find(n => n.name === newName)\r\n        const changedPerson = {...person, number: newNumber}\r\n        phoneService\r\n        .update(person.id, changedPerson)\r\n        .then(returnedContact => {\r\n          setPersons(persons.map(old => old.id !== person.id ? old : returnedContact))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(error.response.data.error)\r\n          setNewNumber('')\r\n          setNewName('')\r\n\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 3000)\r\n        })\r\n      }\r\n\r\n    } else if (newNumber === '' || newName === '') {\r\n      window.alert(\"Please fill in all fields\")\r\n    } else {\r\n      const addressObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      phoneService\r\n      .create(addressObject)\r\n      .then(returnedAddress => {\r\n        setPersons(persons.concat(returnedAddress))\r\n        setNewName('')\r\n        setNewNumber('')\r\n        setMessage(`Added ${returnedAddress.name}!`)\r\n\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 3000)\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(error.response.data.error)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 3000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const deleteContact = (id) => {\r\n    const result = window.confirm('Do you really want to delete the contact?')\r\n    if (result){\r\n      phoneService\r\n        .deleteContact(id)\r\n        .then(()  => {\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage('Contact has already been deleted')\r\n          setPersons(persons.filter(x => x.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    phoneService\r\n      .getAll()\r\n      .then(initialPhoneAddress => {\r\n        setPersons(initialPhoneAddress)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Notification message = {message}/>\r\n      <ErrorMessage message = {errorMessage}/>\r\n      <h2>Phonebook</h2>\r\n      <Filter name={filteredName} handler={handleFilter}/>\r\n      <h2> add a new</h2>\r\n      <PersonForm addContact={addContact} newName={newName}\r\n                  handleNameChange={handleNameChange} newNumber={newNumber}\r\n                  handleNumberChange={handleNumberChange}/>\r\n      <h2>Numbers</h2>\r\n      <Persons arr={filteredContacts} filteredName={filteredName} deleteContact={deleteContact}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","  \nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}